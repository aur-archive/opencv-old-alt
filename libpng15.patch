diff -crB old/src/highgui/grfmt_png.cpp new/src/highgui/grfmt_png.cpp
*** old/src/highgui/grfmt_png.cpp	2010-04-06 03:24:44.000000000 +0200
--- new/src/highgui/grfmt_png.cpp	2012-12-08 03:38:28.872963547 +0100
***************
*** 42,49 ****
  
  #include "_highgui.h"
  
- #ifdef HAVE_PNG
  
  /****************************************************************************************\
      This part of the file implements PNG codec on base of libpng library,
      in particular, this code is based on example.c from libpng
--- 42,51 ----
  
  #include "_highgui.h"
  
  
+ #ifdef HAVE_PNG
+ #include <zconf.h>
+ #include <zlib.h>
  /****************************************************************************************\
      This part of the file implements PNG codec on base of libpng library,
      in particular, this code is based on example.c from libpng
***************
*** 51,61 ****
      and png2bmp sample from libpng distribution (Copyright (C) 1999-2001 MIYASAKA Masaru)
  \****************************************************************************************/
  
! #ifdef HAVE_LIBPNG_PNG_H
! #include <libpng/png.h>
! #else
! #include <png.h>
! #endif
  #include "grfmt_png.h"
  
  namespace cv
--- 53,59 ----
      and png2bmp sample from libpng distribution (Copyright (C) 1999-2001 MIYASAKA Masaru)
  \****************************************************************************************/
  
! #include <libpng15/png.h>
  #include "grfmt_png.h"
  
  namespace cv
***************
*** 107,113 ****
  void  PngDecoder::readDataFromBuf( void* _png_ptr, uchar* dst, size_t size )
  {
      png_structp png_ptr = (png_structp)_png_ptr;
!     PngDecoder* decoder = (PngDecoder*)(png_ptr->io_ptr);
      CV_Assert( decoder );
      const Mat& buf = decoder->m_buf;
      if( decoder->m_buf_pos + size > buf.cols*buf.rows*buf.elemSize() )
--- 105,111 ----
  void  PngDecoder::readDataFromBuf( void* _png_ptr, uchar* dst, size_t size )
  {
      png_structp png_ptr = (png_structp)_png_ptr;
!     PngDecoder* decoder = (PngDecoder*)(png_get_io_ptr(png_ptr));
      CV_Assert( decoder );
      const Mat& buf = decoder->m_buf;
      if( decoder->m_buf_pos + size > buf.cols*buf.rows*buf.elemSize() )
***************
*** 138,144 ****
  
          if( info_ptr && end_info )
          {
!             if( setjmp( png_ptr->jmpbuf ) == 0 )
              {
                  if( !m_buf.empty() )
                      png_set_read_fn(png_ptr, this, (png_rw_ptr)readDataFromBuf );
--- 136,142 ----
  
          if( info_ptr && end_info )
          {
!             if( setjmp(png_jmpbuf(png_ptr)) == 0 )
              {
                  if( !m_buf.empty() )
                      png_set_read_fn(png_ptr, this, (png_rw_ptr)readDataFromBuf );
***************
*** 200,206 ****
          png_infop info_ptr = (png_infop)m_info_ptr;
          png_infop end_info = (png_infop)m_end_info;
  
!         if( setjmp(png_ptr->jmpbuf) == 0 )
          {
              int y;
  
--- 198,204 ----
          png_infop info_ptr = (png_infop)m_info_ptr;
          png_infop end_info = (png_infop)m_end_info;
  
!         if( setjmp(png_jmpbuf(png_ptr)) == 0 )
          {
              int y;
  
***************
*** 223,229 ****
                  png_set_palette_to_rgb( png_ptr );
  
              if( m_color_type == PNG_COLOR_TYPE_GRAY && m_bit_depth < 8 )
!                 png_set_gray_1_2_4_to_8( png_ptr );
  
              if( CV_MAT_CN(m_type) > 1 && color )
                  png_set_bgr( png_ptr ); // convert RGB to BGR
--- 221,227 ----
                  png_set_palette_to_rgb( png_ptr );
  
              if( m_color_type == PNG_COLOR_TYPE_GRAY && m_bit_depth < 8 )
!                 png_set_expand_gray_1_2_4_to_8( png_ptr );
  
              if( CV_MAT_CN(m_type) > 1 && color )
                  png_set_bgr( png_ptr ); // convert RGB to BGR
***************
*** 280,286 ****
      if( size == 0 )
          return;
      png_structp png_ptr = (png_structp)_png_ptr;
!     PngEncoder* encoder = (PngEncoder*)(png_ptr->io_ptr);
      CV_Assert( encoder && encoder->m_buf );
      size_t cursz = encoder->m_buf->size();
      encoder->m_buf->resize(cursz + size);
--- 278,284 ----
      if( size == 0 )
          return;
      png_structp png_ptr = (png_structp)_png_ptr;
!     PngEncoder* encoder = (PngEncoder*)(png_get_io_ptr(png_ptr));
      CV_Assert( encoder && encoder->m_buf );
      size_t cursz = encoder->m_buf->size();
      encoder->m_buf->resize(cursz + size);
***************
*** 322,328 ****
  
          if( info_ptr )
          {
!             if( setjmp( png_ptr->jmpbuf ) == 0 )
              {
                  if( m_buf )
                  {
--- 320,326 ----
  
          if( info_ptr )
          {
!             if( setjmp(png_jmpbuf(png_ptr)) == 0 )
              {
                  if( m_buf )
                  {
